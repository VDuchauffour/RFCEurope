//Rhye

#include "CvGameCoreDLL.h"
#include "CvRhyes.h"

// rhyes.cpp


int* startingTurn = NULL;
int *turnPlayed = NULL;
int *civSpreadFactor = NULL;

// (dynamic civ names - not jdog's)
wchar civDynamicNames[22][22][19]  = {
//				//people		monarchy		monarchy ext		monarchy mod		monarchy ext mod		republic			communism			fascism				islam monarchy		islam republic			vas. Persia			vas. Rome			vas. Arabia			vas. Spain				vas. France			vas. England		vas. Germany			vas. Russia			vas. Mongolia			vas. Turkey			vas. Chi/Jap/Khm	vassal generic					
//Burgundy
	{	 L"TXT_KEY_DN_BUR00", L"TXT_KEY_DN_BUR00", L"TXT_KEY_DN_BUR00", L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00",  L"TXT_KEY_DN_BUR00" },
//Byzantium
	{	 L"TXT_KEY_DN_BYZ00", L"TXT_KEY_DN_BYZ00", L"TXT_KEY_DN_BYZ00", L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00",  L"TXT_KEY_DN_BYZ00" },
//Frankia
	{	 L"TXT_KEY_DN_FRA00", L"TXT_KEY_DN_FRA00", L"TXT_KEY_DN_FRA00", L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00",  L"TXT_KEY_DN_FRA00" },
//Arabia
	{	 L"TXT_KEY_DN_ARA00", L"TXT_KEY_DN_ARA00", L"TXT_KEY_DN_ARA00", L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00",  L"TXT_KEY_DN_ARA00" },
//Bulgaria
	{	 L"TXT_KEY_DN_BUL00", L"TXT_KEY_DN_BUL00", L"TXT_KEY_DN_BUL00", L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00",  L"TXT_KEY_DN_BUL00" },
//Cordoba
	{	 L"TXT_KEY_DN_COR00", L"TXT_KEY_DN_COR00", L"TXT_KEY_DN_COR00", L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00",  L"TXT_KEY_DN_COR00" },
//Spain
	{	 L"TXT_KEY_DN_SPN00", L"TXT_KEY_DN_SPN00", L"TXT_KEY_DN_SPN00", L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00",  L"TXT_KEY_DN_SPN00" },
//Norse
	{	 L"TXT_KEY_DN_NOR00", L"TXT_KEY_DN_NOR00", L"TXT_KEY_DN_NOR00", L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00",  L"TXT_KEY_DN_NOR00" },
//Venecia
	{	 L"TXT_KEY_DN_VEN00", L"TXT_KEY_DN_VEN00", L"TXT_KEY_DN_VEN00", L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00",  L"TXT_KEY_DN_VEN00" },
//Kiev
	{	 L"TXT_KEY_DN_KIE00", L"TXT_KEY_DN_KIE00", L"TXT_KEY_DN_KIE00", L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00",  L"TXT_KEY_DN_KIE00" },
//Hungary
	{	 L"TXT_KEY_DN_HUN00", L"TXT_KEY_DN_HUN00", L"TXT_KEY_DN_HUN00", L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00",  L"TXT_KEY_DN_HUN00" },
//Germany
	{	 L"TXT_KEY_DN_GER00", L"TXT_KEY_DN_GER00", L"TXT_KEY_DN_GER00", L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00",  L"TXT_KEY_DN_GER00" },
//Poland
	{	 L"TXT_KEY_DN_POL00", L"TXT_KEY_DN_POL00", L"TXT_KEY_DN_POL00", L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00",  L"TXT_KEY_DN_POL00" },
//Moscow
	{	 L"TXT_KEY_DN_MOS00", L"TXT_KEY_DN_MOS00", L"TXT_KEY_DN_MOS00", L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00",  L"TXT_KEY_DN_MOS00" },
//Genoa
	{	 L"TXT_KEY_DN_GEN00", L"TXT_KEY_DN_GEN00", L"TXT_KEY_DN_GEN00", L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00",  L"TXT_KEY_DN_GEN00" },
//England
	{	 L"TXT_KEY_DN_ENG00", L"TXT_KEY_DN_ENG00", L"TXT_KEY_DN_ENG00", L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00",  L"TXT_KEY_DN_ENG00" },
//Prtugal
	{	 L"TXT_KEY_DN_POR00", L"TXT_KEY_DN_POR00", L"TXT_KEY_DN_POR00", L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00",  L"TXT_KEY_DN_POR00" },
//Austria
	{	 L"TXT_KEY_DN_AUS00", L"TXT_KEY_DN_AUS00", L"TXT_KEY_DN_AUS00", L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00",  L"TXT_KEY_DN_AUS00" },
//Turkey
	{	 L"TXT_KEY_DN_TUR00", L"TXT_KEY_DN_TUR00", L"TXT_KEY_DN_TUR00", L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00",  L"TXT_KEY_DN_TUR00" },
//Sweden
	{	 L"TXT_KEY_DN_SWE00", L"TXT_KEY_DN_SWE00", L"TXT_KEY_DN_SWE00", L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00",  L"TXT_KEY_DN_SWE00" },
//Dutch
	{	 L"TXT_KEY_DN_DUT00", L"TXT_KEY_DN_DUT00", L"TXT_KEY_DN_DUT00", L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00",  L"TXT_KEY_DN_DUT00" },
//Pope
	{	 L"TXT_KEY_DN_POP00", L"TXT_KEY_DN_POP00", L"TXT_KEY_DN_POP00", L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00",  L"TXT_KEY_DN_POP00" }
};
int civDynamicNamesFlag[22] = 	{	 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 };
//									BUR BYZ	FRA ARA BUL COR SPN NOR VEN KIE HUN GER POL MOS GEN ENG POR AUS TUR SWE DUT POP
// 1 = REL, 0 = GOV

int civDynamicNamesEraThreshold[22] = { 2,  3,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, 2 };

int *settlersMaps = NULL;
int *warsMaps = NULL;

int EARTH_X = 0;
int EARTH_Y = 0;
int NUM_MAJOR_PLAYERS = 0;
int NUM_ALL_PLAYERS = 0;
int NUM_ALL_PLAYERS_B = 0;
int SETTLER_OFFSET = 0;

int MAX_NUM_TECHS = 0;
int NUM_BUILDINGS = 0;

int PAPAL_PLAYER = -2;
int PAPAL_RELIGION = -2;


int SCHISM_A = -2; int SCHISM_B = -2;
int SCHISM_YEAR = -2;

int HOLIEST_CITY_X = -1;
int HOLIEST_CITY_Y = -1;

int *UniquePowers = NULL;
int *FaithPowers = NULL;

// 3Miro: export balance factors
// actual values are set in via Python
int *growthThreshold = NULL;
int* productionModifierUnits = NULL;
int* productionModifierBuildings = NULL;
int* productionModifierWonders = NULL;
int* inflationModifier = NULL;
int* gpModifier = NULL;
int* unitSupportModifier = NULL;
int* cityDistanceSupport = NULL;
int* cityNumberSupport = NULL;
int* civicSupportModifier = NULL;
int* researchModifier = NULL;
int* healthModifier = NULL;
int* workerModifier = NULL;
int* cultureModifier = NULL;

int *cityInitPop = NULL;
int **cityInitBuildings = NULL;
int *startingWorkers = NULL;


int* cityClusterTop = NULL;
int* cityClusterBottom = NULL;
int* cityClusterMinus = NULL;
int** diplomacyModifiers = NULL;

int* cityWarDistance = NULL;
int** techPreferences = NULL;


int* lOwnedCities = NULL;
int* lOwnedPlots = NULL;


int* ProsecutionCount = NULL;


int** CoreAreasRect = NULL;
int* CoreAreasMinusCount = NULL;
int** CoreAreasMinus = NULL;
int** NormalAreasRect = NULL;
int* NormalAreasMinusCount = NULL;
int** NormalAreasMinus = NULL;

int UNIT_PROSECUTOR = -2;
int UNIT_PROSECUTOR_CLASS = -1;
int NUM_RELIGIONS = 5;

int UNIT_SAINT = -2;
int UNIT_SAINT_BENEFIT = -2;
int UNIT_SAINT_1_TRESHHOLD = 0;
int UNIT_SAINT_3_TRESHHOLD = 0;

int INDEP_START = -1;
int INDEP_END = -1;
int BARBARIAN = -1;
bool *AI_INDEP_HUNT = NULL;

bool USE_GLOBAL_WARMING = true;
int FAST_TERRAIN = -1;

int *StrategicTileX = NULL;
int *StrategicTileY = NULL;

extern int * colonyAIModifier = NULL;

bool MiroBelongToCore( int iCiv, int x, int y ){
	if ( ( x>= CoreAreasRect[iCiv][0] ) && ( y >= CoreAreasRect[iCiv][1] ) && ( x<= CoreAreasRect[iCiv][2] ) && ( y<= CoreAreasRect[iCiv][3] ) ){
		for ( int i=0; i<CoreAreasMinusCount[iCiv]; i++ ){
			if ( (CoreAreasMinus[iCiv][2*i] == x)&&(CoreAreasMinus[iCiv][2*i+1] == y) ) return false;
		};
		return true;
	};
	return false;
};
bool MiroBelongToNormal( int iCiv, int x, int y ){
	if ( ( x>= NormalAreasRect[iCiv][0] ) && ( y >= NormalAreasRect[iCiv][1] ) && ( x<= NormalAreasRect[iCiv][2] ) && ( y<= NormalAreasRect[iCiv][3] ) ){
		for ( int i=0; i<NormalAreasMinusCount[iCiv]; i++ ){
			if ( (NormalAreasMinus[iCiv][2*i] == x)&&(NormalAreasMinus[iCiv][2*i+1] == y) ) return false;
		};
		return true;
	};
	return false;
};

//int getSettlersMaps( int iCiv, int y, int x ){
int getSettlersMaps( int iCiv, int y, int x, char * w ){
	if ( settlersMaps == NULL || iCiv >= NUM_MAJOR_PLAYERS ){
		return 20;
	}else{
		if ( (x>=0)&&(x<EARTH_X)&&(y>=0)&&(y<EARTH_Y) ){
			//return settlersMaps[iCiv][y][x];
			return settlersMaps[ iCiv * SETTLER_OFFSET + y * EARTH_X + x ];
		}else{
			GC.getGameINLINE().logMsg(w);
			return 20;
		};
	};
};

bool isIndep( int iCiv ){
	if ( ( iCiv >= INDEP_START) && ( iCiv <= INDEP_END ) ) return true;
	return false;
};